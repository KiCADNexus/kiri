#!/bin/bash

# Wrapper for the kicad6_sheet_instances.py script
# It should work on Linux, Mac and possibly on Windows

readlink_osx()
{
	TARGET_FILE="${1}"

	cd "$(dirname "${TARGET_FILE}")" || exit
	TARGET_FILE=$(basename "${TARGET_FILE}")

	# Iterate down a (possible) chain of symlinks
	while [ -L "${TARGET_FILE}" ]
	do
		TARGET_FILE=$(readlink "${TARGET_FILE}")
		cd "$(dirname "${TARGET_FILE}")" || exit
		TARGET_FILE=$(basename "${TARGET_FILE}")
	done

	# Compute the canonicalized name by finding the physical path
	# for the directory we're in and appending the target file.
	PHYS_DIR=$(pwd -P)

	echo "${PHYS_DIR}/${TARGET_FILE}"
}

main()
{
	case ${OSTYPE} in

		# macOS
		darwin*)

			script_path=$(readlink_osx "${0}")
			script_dir_path=$(dirname "${script_path}")
			script_filename=$(basename "${script_path}")
			export PYTHONPATH="${script_dir_path}/../":"${PYTHONPATH}"

			kicad_app_path="/Applications/Kicad/kicad.app/"
			python="${kicad_app_path}/Contents/Frameworks/Python.framework/Versions/Current/bin/python"

			if [[ ! -d ${kicad_app_path} ]] || [[ ! -f ${python} ]]; then
				kicad_app_path=/Applications/KiCad/KiCad.app/
				python="${kicad_app_path}/Contents/Frameworks/Python.framework/Versions/Current/bin/python3"
			fi

			if [[ -f "${python}" ]]; then
				${python} "${script_dir_path}/${script_filename}.py" "$@"
			fi
			;;

		# Linux
		*)
			script_path=$(readlink -f "$0")
			script_dir_path=$(dirname "${script_path}")
			script_filename=$(basename "${script_path}")
			export PYTHONPATH="${script_dir_path}/../":"${PYTHONPATH}"
			env python3 "${script_dir_path}/${script_filename}.py" "$@"
			;;

	esac
}

main "$@"
